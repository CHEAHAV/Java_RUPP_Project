/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Rupp;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import java.io.File;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HAV
 */
public class Form extends javax.swing.JFrame {
    PreparedStatement ps;
    ResultSet rs;
    String sql;
    Connection connection(){
        Connection con = null;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/db_rupp", "root", "");
        }
        catch(ClassNotFoundException | SQLException e){
            System.err.println("connections Error : " + e.getMessage());
        }
        return con;
    }
    public void Getdata(){
        DefaultTableModel model = (DefaultTableModel) Table.getModel();
        model.setRowCount(0);
        sql = "SELECT * FROM `rupp`";
        try {
            ps = (PreparedStatement) connection().prepareStatement(sql);
            rs = ps.executeQuery();
            while (rs.next()){
                Object row []={
                    rs.getInt(1),
                    rs.getString(2),
                    rs.getString(3),
                    rs.getString(4),
                    rs.getString(5),
                    rs.getString(6),
                    rs.getString(7),
                    rs.getString(8),
                    rs.getString(9),
                    rs.getString(10),
                    rs.getString(11),
                    rs.getString(12),
                    rs.getString(13),
                    rs.getString(14),
                    rs.getString(15),
                    rs.getString(16),
                };
                model.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void clearData(){
        txtId.setText("");
        txtName.setText("");
        btngGender.clearSelection();
        jdBirth.setDate(null);
        jcbYears.setSelectedIndex(0);
        jcbDepartment.setSelectedIndex(0);
        jcbSemester.setSelectedIndex(0);
        jcbClass.setSelectedIndex(0);
        jcbTime.setSelectedIndex(0);
        jcbBuilding.setSelectedIndex(0);
        btngDate.clearSelection();
        jdStart.setDate(null);
        jdFinish.setDate(null);
        txtPhone.setText("");
        txtPrice.setText("");
        txtPhotos.setText("");
        lbPhotos.setIcon(null);
    }
    /**
     * Creates new form Form
     */
    public Form() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngGender = new javax.swing.ButtonGroup();
        btngDate = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        rbf = new javax.swing.JRadioButton();
        rbm = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jcbSemester = new javax.swing.JComboBox<>();
        jcbDepartment = new javax.swing.JComboBox<>();
        cbMtoF = new javax.swing.JCheckBox();
        cbMtoS = new javax.swing.JCheckBox();
        jcbYears = new javax.swing.JComboBox<>();
        txtPrice = new javax.swing.JTextField();
        jdBirth = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        btnPhotos = new javax.swing.JButton();
        btnSort = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        bntClear = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        photos = new javax.swing.JLabel();
        btnSave1 = new javax.swing.JButton();
        lbPhotos = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jcbTime = new javax.swing.JComboBox<>();
        txtPhotos = new javax.swing.JTextField();
        jcbBuilding = new javax.swing.JComboBox<>();
        jdStart = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        jcbClass = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jdFinish = new com.toedter.calendar.JDateChooser();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1647, 751));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("CollegiateFLF", 3, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("royal university of phnom penh");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 6, 1650, 62));

        jLabel2.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 255));
        jLabel2.setText("ID");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, 50, 50));

        txtId.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        txtId.setForeground(new java.awt.Color(0, 51, 51));
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });
        getContentPane().add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 200, 40));

        jLabel3.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 255));
        jLabel3.setText("Years");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 80, 80, 40));

        txtSearch.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        txtSearch.setForeground(new java.awt.Color(0, 51, 51));
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        getContentPane().add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(1460, 380, 150, 50));

        jLabel4.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 255));
        jLabel4.setText("Date of Birth");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 180, 50));

        btngGender.add(rbf);
        rbf.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        rbf.setForeground(new java.awt.Color(204, 204, 255));
        rbf.setText("Female");
        getContentPane().add(rbf, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 370, 90, -1));

        btngGender.add(rbm);
        rbm.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        rbm.setForeground(new java.awt.Color(204, 204, 255));
        rbm.setText("Male");
        rbm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbmActionPerformed(evt);
            }
        });
        getContentPane().add(rbm, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 370, 80, -1));

        jLabel5.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 255));
        jLabel5.setText("Gender");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 350, 110, 50));

        jLabel6.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 204, 255));
        jLabel6.setText("Department");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 150, 160, 50));

        jLabel7.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 255));
        jLabel7.setText("Date");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 140, 80, 50));

        jLabel8.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 204, 255));
        jLabel8.setText("Time");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 370, 70, 50));

        jLabel9.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 204, 255));
        jLabel9.setText("Price");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 380, 80, 40));

        jLabel10.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 204, 255));
        jLabel10.setText("Semester");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 220, 130, 50));

        jLabel11.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(204, 204, 255));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Rupp/Photos/Search.png"))); // NOI18N
        jLabel11.setText("Search");
        jLabel11.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 153)));
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 380, 150, 50));

        jLabel12.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 204, 255));
        jLabel12.setText("Photos");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1320, 290, 90, 40));

        jLabel13.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 204, 255));
        jLabel13.setText("Buiding");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 60, 110, 50));

        txtName.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        txtName.setForeground(new java.awt.Color(0, 51, 51));
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 200, 40));

        jcbSemester.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        jcbSemester.setForeground(new java.awt.Color(0, 51, 51));
        jcbSemester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semester 1", "Semester 2" }));
        getContentPane().add(jcbSemester, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 230, 210, 40));

        jcbDepartment.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        jcbDepartment.setForeground(new java.awt.Color(0, 51, 51));
        jcbDepartment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Computer Science", "Informations technology engineering", "Mathematics", "Physics", "Chemistry", "Biology", " " }));
        jcbDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbDepartmentActionPerformed(evt);
            }
        });
        getContentPane().add(jcbDepartment, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 150, 210, 40));

        cbMtoF.setBackground(new java.awt.Color(255, 255, 255));
        btngDate.add(cbMtoF);
        cbMtoF.setFont(new java.awt.Font("Century Schoolbook", 1, 20)); // NOI18N
        cbMtoF.setForeground(new java.awt.Color(255, 255, 255));
        cbMtoF.setText("Monday - Friday");
        cbMtoF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMtoFActionPerformed(evt);
            }
        });
        getContentPane().add(cbMtoF, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 120, 240, 40));

        btngDate.add(cbMtoS);
        cbMtoS.setFont(new java.awt.Font("Century Schoolbook", 1, 20)); // NOI18N
        cbMtoS.setForeground(new java.awt.Color(255, 255, 255));
        cbMtoS.setText("Monday - Saturday");
        cbMtoS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMtoSActionPerformed(evt);
            }
        });
        getContentPane().add(cbMtoS, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 160, 220, 40));

        jcbYears.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        jcbYears.setForeground(new java.awt.Color(0, 51, 51));
        jcbYears.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Years 1", "Years 2", "Years 3", "Years 4" }));
        jcbYears.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbYearsActionPerformed(evt);
            }
        });
        getContentPane().add(jcbYears, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 80, 210, 40));

        txtPrice.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        txtPrice.setForeground(new java.awt.Color(0, 51, 51));
        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });
        getContentPane().add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 380, 210, 40));

        jdBirth.setForeground(new java.awt.Color(0, 51, 51));
        getContentPane().add(jdBirth, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 410, 200, 40));

        Table.setAutoCreateRowSorter(true);
        Table.setBackground(new java.awt.Color(204, 204, 204));
        Table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 2));
        Table.setFont(new java.awt.Font("Khmer OS System", 1, 14)); // NOI18N
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Gender", "Date of Birth", "Years", "Department", "Semester", "Class", "Time", "Buiding", "Date", "Start", "Finish", "Phone", "Price", "Photos"
            }
        ));
        Table.setAlignmentX(1.0F);
        Table.setAlignmentY(1.0F);
        Table.setRowHeight(25);
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 470, 1590, 230));

        btnPhotos.setBackground(new java.awt.Color(0, 0, 102));
        btnPhotos.setFont(new java.awt.Font("Century Schoolbook", 3, 18)); // NOI18N
        btnPhotos.setForeground(new java.awt.Color(204, 204, 255));
        btnPhotos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Rupp/Photos/photos.png"))); // NOI18N
        btnPhotos.setText("Photos");
        btnPhotos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPhotosActionPerformed(evt);
            }
        });
        getContentPane().add(btnPhotos, new org.netbeans.lib.awtextra.AbsoluteConstraints(1450, 210, 150, 50));

        btnSort.setBackground(new java.awt.Color(0, 0, 102));
        btnSort.setFont(new java.awt.Font("Century Schoolbook", 3, 18)); // NOI18N
        btnSort.setForeground(new java.awt.Color(204, 204, 255));
        btnSort.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Rupp/Photos/Sort.png"))); // NOI18N
        btnSort.setText("Sort");
        btnSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortActionPerformed(evt);
            }
        });
        getContentPane().add(btnSort, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 710, 120, 50));

        btnUpdate.setBackground(new java.awt.Color(0, 0, 102));
        btnUpdate.setFont(new java.awt.Font("Century Schoolbook", 3, 18)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(204, 204, 255));
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Rupp/Photos/Update.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 710, 150, 50));

        bntClear.setBackground(new java.awt.Color(0, 0, 102));
        bntClear.setFont(new java.awt.Font("Century Schoolbook", 3, 18)); // NOI18N
        bntClear.setForeground(new java.awt.Color(204, 204, 255));
        bntClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Rupp/Photos/clear.png"))); // NOI18N
        bntClear.setText("Clear");
        bntClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntClearActionPerformed(evt);
            }
        });
        getContentPane().add(bntClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 710, 140, 50));

        btnDelete.setBackground(new java.awt.Color(0, 0, 102));
        btnDelete.setFont(new java.awt.Font("Century Schoolbook", 3, 18)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(204, 204, 255));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Rupp/Photos/Delete.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 710, -1, 50));

        btnExit.setBackground(new java.awt.Color(0, 0, 102));
        btnExit.setFont(new java.awt.Font("Century Schoolbook", 3, 18)); // NOI18N
        btnExit.setForeground(new java.awt.Color(204, 204, 255));
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Rupp/Photos/close.png"))); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        getContentPane().add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1500, 710, 120, 50));

        photos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Rupp/Photos/Rupp.png"))); // NOI18N
        photos.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        getContentPane().add(photos, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 210, 200));

        btnSave1.setBackground(new java.awt.Color(0, 0, 102));
        btnSave1.setFont(new java.awt.Font("Century Schoolbook", 3, 18)); // NOI18N
        btnSave1.setForeground(new java.awt.Color(204, 204, 255));
        btnSave1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Rupp/Photos/Save.png"))); // NOI18N
        btnSave1.setText("Save");
        btnSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnSave1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 710, 130, 50));

        lbPhotos.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(204, 204, 255)));
        getContentPane().add(lbPhotos, new org.netbeans.lib.awtextra.AbsoluteConstraints(1450, 20, 150, 180));

        jLabel15.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(204, 204, 255));
        jLabel15.setText("Finish");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 260, 90, 50));

        jcbTime.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        jcbTime.setForeground(new java.awt.Color(0, 51, 51));
        jcbTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Morning", "Afternoon", "Evening" }));
        getContentPane().add(jcbTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 380, 210, 40));

        txtPhotos.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        txtPhotos.setForeground(new java.awt.Color(0, 51, 51));
        txtPhotos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhotosActionPerformed(evt);
            }
        });
        getContentPane().add(txtPhotos, new org.netbeans.lib.awtextra.AbsoluteConstraints(1420, 290, 180, 40));

        jcbBuilding.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        jcbBuilding.setForeground(new java.awt.Color(0, 51, 51));
        jcbBuilding.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Building A", "Building B", "Building C", "Building D", "Building T", "STEM Building" }));
        getContentPane().add(jcbBuilding, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 70, 200, 40));

        jdStart.setForeground(new java.awt.Color(0, 51, 51));
        getContentPane().add(jdStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 210, 210, 40));

        jLabel16.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(204, 204, 255));
        jLabel16.setText("Start");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 210, 80, 40));

        jcbClass.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        jcbClass.setForeground(new java.awt.Color(0, 51, 51));
        jcbClass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "M1", "M2", "M3", "M4", "M5", "A1", "A2", "A3", "A4", "A5", "E1", "E2", "E3", "E4", "E5" }));
        getContentPane().add(jcbClass, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 300, 210, 40));

        jLabel14.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(204, 204, 255));
        jLabel14.setText("Class");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 300, 70, 50));

        jLabel17.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(204, 204, 255));
        jLabel17.setText("Phone");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 320, 90, 50));

        txtPhone.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        txtPhone.setForeground(new java.awt.Color(0, 51, 51));
        txtPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneActionPerformed(evt);
            }
        });
        getContentPane().add(txtPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 330, 210, 40));

        jLabel19.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(204, 204, 255));
        jLabel19.setText("Name");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, 90, 50));

        jdFinish.setForeground(new java.awt.Color(0, 51, 51));
        getContentPane().add(jdFinish, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 270, 210, 40));

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Rupp/Photos/2.png"))); // NOI18N
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1650, 770));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void cbMtoFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMtoFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMtoFActionPerformed

    private void cbMtoSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMtoSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMtoSActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)Table.getModel();
        int row = Table.getSelectedRow();
        txtId.setText(model.getValueAt(row, 0).toString());
        txtName.setText(Table.getValueAt(row, 1).toString());
        String gender = model.getValueAt(row, 2).toString();
        if(gender.equalsIgnoreCase("Male")){
            rbm.setSelected(true);
        }
        else{
            rbf.setSelected(true);
        }
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        try {
        java.util.Date st = df.parse(Table.getValueAt(row, 3).toString());
            jdBirth.setDate(st);
            } catch (ParseException ex) {
            Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
        }
        jcbYears.setSelectedItem(Table.getValueAt(row, 4).toString());
        jcbDepartment.setSelectedItem(Table.getValueAt(row, 5).toString());
        jcbSemester.setSelectedItem(Table.getValueAt(row, 6).toString());
        jcbClass.setSelectedItem(Table.getValueAt(row, 7).toString());
        jcbTime.setSelectedItem(Table.getValueAt(row, 8).toString());
        jcbBuilding.setSelectedItem(Table.getValueAt(row, 9).toString());
        String date = model.getValueAt(row, 10).toString();
        if(date.equalsIgnoreCase("Monday - Friday")){
            cbMtoF.setSelected(true);
        }
        else{
            cbMtoS.setSelected(true);
        }
        try {
        java.util.Date st = df.parse(Table.getValueAt(row, 11).toString());
            jdStart.setDate(st);
            } catch (ParseException ex) {
            Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
        java.util.Date st = df.parse(Table.getValueAt(row, 12).toString());
            jdFinish.setDate(st);
        } catch (ParseException ex) {
        Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtPhone.setText(Table.getValueAt(row, 13).toString());
        txtPrice.setText(Table.getValueAt(row, 14).toString());
        txtPhotos.setText(Table.getValueAt(row, 15).toString());
        lbPhotos.setIcon(new javax.swing.ImageIcon(model.getValueAt(row, 15).toString()));
    }//GEN-LAST:event_TableMouseClicked

    private void btnPhotosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPhotosActionPerformed
        // TODO add your handling code here:
        JFileChooser choos = new JFileChooser();
        choos.showOpenDialog(null);
        File file = choos.getSelectedFile();
        String filename = file.getAbsolutePath();
        txtPhotos.setText(filename);
        ImageIcon icon = new ImageIcon(filename);
        lbPhotos.setIcon(icon);
    }//GEN-LAST:event_btnPhotosActionPerformed

    private void btnSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSortActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(null, "Do you want to update data?", "Informatoin students", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION){
            try{
                ps = (PreparedStatement) connection().prepareStatement("UPDATE rupp SET id=?, name=?, gender=? , birth=?, years=?, department=?, semester=?, class=?, time=?, building=?, date=?, start=?, finish=? phone=?, price=?, photos=? WHERE id = ?");
                ps.setInt(1, Integer.parseInt(txtId.getText()));
                ps.setString(2, txtName.getText());
                ps.setString(3, rbm.isSelected()==true ? "Male" : "Female");
                SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                ps.setString(4, df.format(jdBirth.getDate()));
                ps.setString(5,jcbYears.getSelectedItem().toString());
                ps.setString(6, jcbDepartment.getSelectedItem().toString());
                ps.setString(7, jcbSemester.getSelectedItem().toString());
                ps.setString(8, jcbClass.getSelectedItem().toString());
                ps.setString(9, jcbTime.getSelectedItem().toString());
                ps.setString(10, jcbBuilding.getSelectedItem().toString());
                String Date;
                if(cbMtoF.isSelected()==true){
                    Date = "Monday - Friday";
                }
                else{
                    Date = "Monday - Saturday";
                }
                ps.setString(11, Date);
                ps.setString(12, df.format(jdStart.getDate()));
                ps.setString(13, df.format(jdFinish.getDate()));
                ps.setString(14, txtPhone.getText());
                ps.setString(15, txtPrice.getText());
                ps.setString(16, txtPhotos.getText());
                ps.setInt(17, Integer.parseInt(txtId.getText()));
                int index = ps.executeUpdate();
                if(index > 0){
                    DefaultTableModel model = (DefaultTableModel) Table.getModel();
                    model.setRowCount(0);
                    JOptionPane.showMessageDialog(null, "Update success...!");
                    Getdata();
                    clearData();
                }
            }catch (SQLException ex) {
                Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Update not success...!");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void bntClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntClearActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(null, "Do you want to clear data?", "Information students", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION){
            clearData();
            JOptionPane.showMessageDialog(null, "Clear success...!");
        }
         JOptionPane.showMessageDialog(null, "Clear not success...!");
    }//GEN-LAST:event_bntClearActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(null, "Do you want to delete data?","Informaton students",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION){
            try {
                ps = (PreparedStatement) connection().prepareStatement("DELETE FROM `rupp` WHERE id = ?");
                ps.setInt(1, Integer.parseInt(txtId.getText()));
                int index = ps.executeUpdate();
                if(index > 0){
                    DefaultTableModel model = (DefaultTableModel) Table.getModel();
                    model.setRowCount(0);
                    JOptionPane.showMessageDialog(null, "Delete success...!");
                    Getdata();
                    clearData();
                }
            } catch (SQLException ex) {
                Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Delete not success...!");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        
        if(JOptionPane.showConfirmDialog(null, "Do you want to exit?", "Information students", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        Getdata();
    }//GEN-LAST:event_formWindowOpened

    private void btnSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave1ActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(null, "Do you want to save data?", "Information students",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION){
            int id = Integer.parseInt(txtId.getText());
            String name = txtName.getText();
            String gender = (rbm.isSelected()==true) ? "Male" : "Female";
            SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");
            String birth = date.format(jdBirth.getDate());
            String years = jcbYears.getSelectedItem().toString();
            String department = jcbDepartment.getSelectedItem().toString();
            String semester = jcbSemester.getSelectedItem().toString();
            String Class = jcbClass.getSelectedItem().toString();
            String time = jcbTime.getSelectedItem().toString();
            String building = jcbBuilding.getSelectedItem().toString();
            String Date;
            if(cbMtoF.isSelected()==true){
                Date = "Monday - Friday";
            }
            else{
                Date = "Monday - Saturdat";
            }
            String start = date.format(jdStart.getDate());
            String finish = date.format(jdFinish.getDate());
            String phone = txtPhone.getText();
            String price = txtPrice.getText();
            String photo = txtPhotos.getText();
             sql = "INSERT INTO `rupp`(`id`, `name`, `gender`, `birth`, `years`, `department`, `semester`, `class`, `time`, `building`, `date`, `start`, `finish`, `phone`, `price`, `photos`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            try {
                ps = (PreparedStatement) connection().prepareStatement(sql);
                ps.setInt(1, id);
                ps.setString(2, name);
                ps.setString(3, gender);
                ps.setString(4, birth);
                ps.setString(5, years);
                ps.setString(6, department);
                ps.setString(7, semester);
                ps.setString(8, Class);
                ps.setString(9, time);
                ps.setString(10, building);
                ps.setString(11, Date);
                ps.setString(12, start);
                ps.setString(13, finish);
                ps.setString(14, phone);
                ps.setString(15, price);
                ps.setString(16,photo);
                int i = ps.executeUpdate();
                if(i>0){
                    DefaultTableModel model = (DefaultTableModel)Table.getModel();
                    model.setRowCount(0);
                    Getdata();
                }
            } catch (SQLException ex) {
                Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Data save success...!");
        }
        else{
            JOptionPane.showMessageDialog(null, "Data save not success...!");
        }
    }//GEN-LAST:event_btnSave1ActionPerformed

    private void txtPhotosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhotosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhotosActionPerformed

    private void txtPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneActionPerformed

    private void jcbDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbDepartmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbDepartmentActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        try{
            sql = "SELECT * FROM `rupp` WHERE id=?";
            ps = (PreparedStatement) connection().prepareStatement(sql);
            ps.setString(1, txtSearch.getText());
            rs = ps.executeQuery();
            if(rs.next()){
                String setId = rs.getString("id");
                txtId.setText(setId);
                String setname = rs.getString("name");
                txtName.setText(setname);
                jdBirth.setDate(rs.getDate("birth"));
                String setgender = rs.getString("gender");
               if(setgender.equalsIgnoreCase("Male")){
                   rbm.setSelected(true);
               }
               else{
                   rbf.setSelected(true);
                }
                String setyears = rs.getString("years");
                switch(setyears){
                    case "Years 1" -> jcbYears.setSelectedIndex(0);
                    case "Years 2" -> jcbYears.setSelectedIndex(1);
                    case "Years 3" -> jcbYears.setSelectedIndex(2);
                    default -> jcbYears.setSelectedIndex(3);
                }
                String setdeprtment = rs.getString("department");
                switch(setdeprtment){
                    case "Computer Science" -> jcbDepartment.setSelectedIndex(0);
                    case "Informations technology engineering" -> jcbDepartment.setSelectedIndex(1);
                    case "Mathematics" -> jcbDepartment.setSelectedIndex(2);
                    case "Physics" -> jcbDepartment.setSelectedIndex(3);
                    case "Chemistry" -> jcbDepartment.setSelectedIndex(4);
                    default -> jcbDepartment.setSelectedIndex(5);
                }
                String setsemester = rs.getString("semester");
                switch(setsemester){
                    case "Semester 1" -> jcbSemester.setSelectedIndex(0);
                    default -> jcbSemester.setSelectedIndex(1);
                }
                String setclass = rs.getString("class");
                switch(setclass){
                    case "M1" -> jcbClass.setSelectedIndex(0);
                    case "M2" -> jcbClass.setSelectedIndex(1);
                    case "M3" -> jcbClass.setSelectedIndex(2);
                    case "M4" -> jcbClass.setSelectedIndex(3);
                    case "M5" -> jcbClass.setSelectedIndex(4);
                    case "A1" -> jcbClass.setSelectedIndex(5);
                    case "A2" -> jcbClass.setSelectedIndex(6);
                    case "A3" -> jcbClass.setSelectedIndex(7);
                    case "A4" -> jcbClass.setSelectedIndex(8);
                    case "A5" -> jcbClass.setSelectedIndex(9);
                    case "E1" -> jcbClass.setSelectedIndex(10);
                    case "E2" -> jcbClass.setSelectedIndex(11);
                    case "E3" -> jcbClass.setSelectedIndex(12);
                    case "E4" -> jcbClass.setSelectedIndex(13);
                    default -> jcbClass.setSelectedIndex(14);
                }
                String settime = rs.getString("time");
                switch(settime){
                    case "Morning" -> jcbTime.setSelectedIndex(0);
                    case "Afternoon" -> jcbTime.setSelectedIndex(1);
                    default -> jcbTime.setSelectedIndex(2);
                }
                String Building = rs.getString("building");
                switch(Building){
                    case "Building A" -> jcbBuilding.setSelectedIndex(0);
                    case "Building B" -> jcbBuilding.setSelectedIndex(1);
                    case "Building C" -> jcbBuilding.setSelectedIndex(2);
                    case "Building D" -> jcbBuilding.setSelectedIndex(3);
                    case "Building T" -> jcbBuilding.setSelectedIndex(4);
                    default -> jcbBuilding.setSelectedIndex(5);
                }
                String setdate = rs.getString("date");
               if(setdate.equalsIgnoreCase("Monday - Friday")){
                   cbMtoF.setSelected(true);
               }
               else{
                   cbMtoS.setSelected(true);
                }
                jdStart.setDate(rs.getDate("start"));
                jdFinish.setDate(rs.getDate("finish"));
                String setphone = rs.getString("phone");
                txtPhone.setText(setphone);
                String setprice = rs.getString("price");
                txtPrice.setText(setprice);
                String setphotos = rs.getString("photos");
                txtPhotos.setText(setphotos);
                ImageIcon icon = new ImageIcon(setphotos);
                lbPhotos.setIcon(icon);
            }
        }catch (SQLException ex) {
            Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void jcbYearsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbYearsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbYearsActionPerformed

    private void rbmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbmActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton bntClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnPhotos;
    private javax.swing.JButton btnSave1;
    private javax.swing.JButton btnSort;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup btngDate;
    private javax.swing.ButtonGroup btngGender;
    private javax.swing.JCheckBox cbMtoF;
    private javax.swing.JCheckBox cbMtoS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcbBuilding;
    private javax.swing.JComboBox<String> jcbClass;
    private javax.swing.JComboBox<String> jcbDepartment;
    private javax.swing.JComboBox<String> jcbSemester;
    private javax.swing.JComboBox<String> jcbTime;
    private javax.swing.JComboBox<String> jcbYears;
    private com.toedter.calendar.JDateChooser jdBirth;
    private com.toedter.calendar.JDateChooser jdFinish;
    private com.toedter.calendar.JDateChooser jdStart;
    private javax.swing.JLabel lbPhotos;
    private javax.swing.JLabel photos;
    private javax.swing.JRadioButton rbf;
    private javax.swing.JRadioButton rbm;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPhotos;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
